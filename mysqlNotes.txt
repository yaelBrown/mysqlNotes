MySQL
  Documentation - https://dev.mysql.com/doc/refman/8.0/en/
  
  When copying sql code, white space breaks the sql code.
    Copy as plain text
  1 user, 1 db per app.
  Have another account with equal access to Root to help root out.
  Data plural is Datum
  
  Migration file - File that creates tables.
  Seeder file - Will populate the table with records.
  
  mysqldump -u username -p dbname > dbexport.sql - Exports database to sql file
    Reference: https://www.a2hosting.com/kb/developer-corner/mysql/import-and-export-a-mysql-database#MySQL-Import-DatabaseMethod-2.3A-Use-the-emmysqlem-program
  mysql -u username -p dbname < dbexport.sql - Will import that file
  
  Datatypes in Java and Mysql are not one to one.
  Table join can query data from multiple tables
  Docker containers can run mysql inside of it
  terminal install via linux package manager
  on a server can install with cpanel
  MySQL workbench - GUI for managing the database
  mariaDB a superset of mysql.
  
  Flush Priveledges - Refreshes the users table so that changes in permissions work right away
    (flushing toilet analogy, clean slate)
    No need for flush privledges, assigned privs are effective immediately. 
    
  Never put plain text into database for passwords
    Always want to hash the password
  
  ctrl+enter - runs commands within workbench
  Default port 3306 
  
  mysql --version - see the version of installed mysql
  mysql.server - starts mysql server
  mysql.server status - Shows the status of the sql server
  mysql -u root -p - Login to your mysql client
  mysql -u root -p -t < filename.sql - Runs the file in the sql command prompts
  
  mysql>
    help - shows commands that you can run
    help contents - shows the topics (like table of contents)
    have to end queries with a semi-colon;
    \c - cancels the query line
    \g - creates a readable list
    page less - creates pages for the information instead of spamming everything at you
    nopager - turns pager shit off
  
    SELECT NOW() - Shows mysql server current date and time
    SELECT CURDATE() - SHows current date but not the time
    SELECT CURTIME() - Shows current time but not the date
  
    SELECT current_user - shows current user
    SELECT user, host FROM mysql.user - list's all users
    CREATE USER '[usr]'@'[ip address]' IDENTIFIED BY '[password]' - Creates a user on the database you specified by IP address
    GRANT ALL ON [name of db].[name of table] TO '[username]'@'[address]' - Gives all permissions of that table to that db to that specific username at that specific address
      List of privleges - https://dev.mysql.com/doc/refman/5.7/en/privileges-provided.html#idm139711220094800
    SHOW GRANTS FOR '[username]'@'[address]' - Shows the privledges for any user
    DROP USEr '[usr]'@'[ip address]' - Removes users
  
    CREATE DATABASE [name of db] - Create a database
    CREATE DATABASE IF NOT EXISTS [name of db] - Create a database if one does not exist
    SHOW WARNINGS - Creates a warning table, with the warnings (most recent query)
    SHOW DATABASES - (plural) shows all the databases
    SHOW CREATE DATABASE [name of db]\G - Shows how that database was created
    USE [db name] - Use that particular database name
    DROP DATABASE [name of db] - Deletes database
    DROP DATABASE IF EXISTS [name of db] - Drops the database if it does exists
    SHOW TABLES - Shows all tables
    DESCRIBE [table name] - Shows columns and rows of all the tables.
  
    CREATE TABLE [table name] - Creates a table
      Mysql datatypes - http://www.mysqltutorial.org/mysql-data-types.aspx
      Math with different datatypes
      bigint - Better for saving phone numbers
      int 
        [column name] MEDIUMINT UNSIGNED - unsigned frees up more memory
      floats/double - Not for money, certain number of precision not exact number
      decimal - Preferred for Money
        DECIMAL(10,2) - 9999999.22
          10 is the total digits before the decimal place
          2 after the decimal place
    DROP TABLE [table name] - Removes table
    ALTER TABLE - make changes to tables
      ALTER TABLE [table name] ADD [column name to add] [datatype] - Adds a column to the table. 
      ALTER TABLE [table name] MODIFY COLUMN [column name] [datatype] - Modifies a column on the table. 
    SOURCE [.sql file location] - Run sql scripts while already being logged in.
    INSERT INTO [db name]([column name], [column name], [column name]) 
      VALUES ([content], [content], [content]) - Adds data to database.
        '' - escapes apostrophe's. "can''t"
        \' - also escapes apostrophe's. "can\'t"
  
    SELECT * FROM [db name] - Shows everything in the database
      Check the first, check the middle, and check the last
    SELECT * FROM [db name] LIMIT 10 - Shows the first 10 entries in db.
    SELECT [column] AS '[name of results]' FROM [db name] WHERE [column name] = '[String' - Creates a table with the custom title of whatever you put as [name of results]
      Called an 'AS clause'
    SELECT * FROM [db name] WHERE id = 1 - Will select all columns for entry with the ID of one.
    SELECT * FROM [db name] WHERE [column name] IN ('[query]', '[query]', '[query]') - Search for multiple queries
    SELECT * FROM [db name] WHERE [column name] LIKE '%[query]' - Similar to .contains() in java % are wildcards, pattern matching
      NOT LIKE - Will give us opposite, what does not equal the value searched.
      When doing like whatever is infront of % that's what it will search 'what starts with ...'. 
      Whatever is after the % 'what ends with...'
      '%[something]%' means anything can before and anything can be after
    SELECT * FROM [db name] WHERE [column name] BETWEEN [parameter] AND [paramenter] - Displays users that meet criteria between the two parameters
    SELECT * FROM [db name] WHERE [column name] IS NULL - can be is null or is not null, 
    SELECT [column name], [column name] FROM [db name] - selects specific columns with all users from db
    SELECT CONCAT([column name], ' ', [column name]) AS '[Name for the column to display]', [column name] FROM [db name] - Will concatenate 2 columns in one column and display it under the name you specify. 
      Using CONCAT_WS('[seperator]', '[column name]'...) - Uses a word seperator with the CONCAT command.
    SELECT * FROM [db name] ORDER BY [column name] ASC - Sorts everything ascending by specified column
      DESC - is descending
      Leaving out ASC and DESC sorts ASC by default.
  
    UPDATE [db name] SET [column name] = 'change', [column name] = 'change' WHERE id = [#] - Makes 2 column updates to specified column id.
  
    REMOVE * FROM [db name] WHERE id = [#] - Removes a item with a id matches specified number
  
    TRUNCATE - Removes all the values from the table. 






    